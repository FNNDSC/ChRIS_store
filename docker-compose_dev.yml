# https://docs.docker.com/compose/yml/
# Each service defined in docker-compose.yml must specify exactly one of
# image or build. Other keys are optional, and are analogous to their
# docker run command-line counterparts.
#
# As with docker run, options specified in the Dockerfile (e.g., CMD,
# EXPOSE, VOLUME, ENV) are respected by default - you don't need to
# specify them again in docker-compose.yml.
#

version: '3.7'

services:
  chris_store_dev:
    image: ${CREPO}/chris_store:dev
    build:
      context: .
      args:
        ENVIRONMENT: local
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    command: python manage.py runserver 0.0.0.0:8010
    volumes:
      - ./store_backend:/home/localuser/store_backend:z
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DJANGO_DB_MIGRATE=on
    ports:
      - "8010:8010"
    depends_on:
      - chris_store_dev_db
      - swift_service_dev
    labels:
      name: "ChRIS_store"
      role: "Development server"

  chris_store_dev_db:
    image: postgres:13
    volumes:
      - chris_store_dev_db_data:/var/lib/postgresql/data:z
    environment:
      - POSTGRES_DB=chris_store_dev
      - POSTGRES_USER=chris
      - POSTGRES_PASSWORD=Chris1234
    labels:
      name: "ChRIS_store PostgreSQL Database"
      role: "Development database"

  swift_service_dev:
    image: fnndsc/docker-swift-onlyone
    init: true
    volumes:
      - swift_storage_dev:/srv:z
    environment:
      - SWIFT_USERNAME=chris:chris1234
      - SWIFT_KEY=testing
    ports:
      - "8080:8080"
    labels:
      name: "swift"
      role: "swift object storage service"

volumes:
  chris_store_dev_db_data:
  swift_storage_dev:
