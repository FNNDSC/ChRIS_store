# https://docs.docker.com/compose/yml/
# Each service defined in docker-compose.yml must specify exactly one of
# image or build. Other keys are optional, and are analogous to their
# docker run command-line counterparts.
#
# As with docker run, options specified in the Dockerfile (e.g., CMD,
# EXPOSE, VOLUME, ENV) are respected by default - you don't need to
# specify them again in docker-compose.yml.
#

version: '3.7'

services:
  chris_store:
    image: fnndsc/chris_store
    environment:
      - DATABASE_HOST=chris_store_db
      - DATABASE_PORT=5432
      - SWIFT_AUTH_URL=http://swift_service:8080/auth/v1.0
    env_file:
      - ./secrets/.chris_store.env
      - ./secrets/.chris_store_db.env
      - ./secrets/.swift_service.env
    ports:
      - "8010:8010"
    depends_on:
      - chris_store_db
      - swift_service
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      name: "ChRIS_store"
      role: "Production server using Apache's mod_wsgi"

  chris_store_db:
    image: postgres:13
    volumes:
      - chris_store_db_data:/var/lib/postgresql/data
    env_file:
      - ./secrets/.chris_store_db.env
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      name: "ChRIS_store PostgreSQL Database"
      role: "Production PostgreSQL database"

  swift_service:
    image: fnndsc/docker-swift-onlyone
    init: true
    volumes:
      - swift_storage:/srv
    env_file:
      - ./secrets/.swift_service.env
    ports:
      - "8080:8080"
    deploy:
      restart_policy:
        condition: on-failure
    labels:
      name: "swift"
      role: "Swift object storage service"

volumes:
  chris_store_db_data:
  swift_storage:
